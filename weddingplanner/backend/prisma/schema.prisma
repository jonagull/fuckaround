generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  email          String        @unique
  name           String
  phone          String?
  hashedPassword String
  refreshToken   RefreshToken[]
  userEvents     UserEvent[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
}

enum EventType {
  WEDDING
  BIRTHDAY
  CORPORATE
  OTHER
}

enum EventRole {
  OWNER
  PLANNER
  VENDOR
  GUEST
}

model Address {
  id        String   @id @default(uuid())
  street    String
  city      String
  state     String
  zip       String
  country   String
  latitude  Float
  longitude Float
  placeId   String
  events    Event[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id               String      @id @default(uuid())
  eventName        String
  eventDescription String?
  eventType        EventType
  eventDate        DateTime?
  venueAddressId   String?
  venueAddress     Address?    @relation(fields: [venueAddressId], references: [id])
  planners         UserEvent[]
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model UserEvent {
  id         String    @id @default(uuid())
  eventId    String
  event      Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  role       EventRole
  stringRole String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([userId, eventId])
}
